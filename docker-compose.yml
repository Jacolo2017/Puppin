volumes:
    postgres-data:
        external: true
    pg-admin:
        external: true
services:
  react:
    image: node:lts-bullseye
    command: /bin/bash run.sh
    working_dir: /app
    volumes:
        - ./ghi/app:/app
    ports:
        - "3000:3000"
    environment:
        HOST_OS: ${OS}
        NODE_ENV: development
        HOST: "0.0.0.0"
        REACT_APP_PUPPIN_HOST: http://localhost:8001
  puppin:
    build:
      context: ./puppin/api
      dockerfile: ./Dockerfile.dev
    ports: 
    - "8001:8000"
    volumes:
      - ./puppin/api:/app
    depends_on:
      - postgres
    environment:
      DATABASE_URL: postgres://puppin:puppin@postgres:5432/puppin 
      SECRET_KEY: e7eb3ee8f8e8045c8497e605849804d14d3979cb4922b476b67e199448b6b00b
      PGHOST: postgres
      PGDATABASE: puppin
      PGUSER: puppin
      PGPASSWORD: puppin

  postgres:
      build:
          context: ./relational-data
          dockerfile: ./Dockerfile.dev
      volumes:
          - ./data/postgres/init:/docker-entrypoint-initdb.d
          - postgres-data:/var/lib/postgresql/data
      environment:
        POSTGRES_PASSWORD: puppin
        POSTGRES_USER: puppin
        POSTGRES_DB: puppin
      ports:
          - 15432:5432
  
  pg-admin:
    image: dpage/pgadmin4 #I only have to docker-compose up
    volumes:
      - pg-admin:/var/lib/pgadmin4
    ports:
      - 8082:80
    environment:
      PGADMIN_DEFAULT_EMAIL: email@puppin.com
      PGADMIN_DEFAULT_PASSWORD: password
      PGADMIN_DISABLE_POSTFIX: 1
    